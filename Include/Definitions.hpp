/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   Definitions.hpp                                    :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: psenko <psenko@student.42heilbronn.de>     +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/07/25 00:37:03 by auplisas          #+#    #+#             */
/*   Updated: 2025/07/30 14:05:41 by psenko           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef DEFINITIONS_HPP
# define DEFINITIONS_HPP

#define RPL_WELCOME(yournick, user, host) (std::string(":server 001 ") + yournick + " :Welcome to the Internet Relay Network " + "!" + user + "@" + host + "\r\n")
#define RPL_YOURHOST(yournick, servername, version) (std::string(":server 002 ") + yournick + " :Your host is " + servername + ", running version " + version + "\r\n")
#define RPL_CREATED(yournick, date) (std::string(":server 003 ") + yournick + " :This server was created " + date + "\r\n")
#define RPL_MYINFO(yournick, servername, version, usermodes, chanmodes) (std::string(":server 004 ") + yournick + " " + servername + " " + version + " " + usermodes + " " + chanmodes + "\r\n")
#define RPL_BOUNCE(yournick, servername, port) (std::string(":server 005 ") + yournick + " :Try server " + servername + ", port " + port + "\r\n")
#define RPL_TRACELINK(yournick, ...) (std::string(":server 200 ") + yournick + " Link " + __VA_ARGS__ + "\r\n")
#define RPL_TRACECONNECTING(yournick, conn_class, server) (std::string(":server 201 ") + yournick + " Try. " + conn_class + " " + server + "\r\n")
#define RPL_TRACEHANDSHAKE(yournick, conn_class, server) (std::string(":server 202 ") + yournick + " H.S. " + conn_class + " " + server + "\r\n")
#define RPL_TRACEUNKNOWN(yournick, ...) (std::string(":server 203 ") + yournick + " ???? " + __VA_ARGS__ + "\r\n")
#define RPL_TRACEOPERATOR(yournick, conn_class, nick) (std::string(":server 204 ") + yournick + " Oper " + conn_class + " " + nick + "\r\n")
#define RPL_TRACEUSER(yournick, conn_class, nick) (std::string(":server 205 ") + yournick + " User " + conn_class + " " + nick + "\r\n")
#define RPL_TRACESERVER(yournick, ...) (std::string(":server 206 ") + yournick + " Serv " + __VA_ARGS__ + "\r\n")
#define RPL_TRACESERVICE(yournick, ...) (std::string(":server 207 ") + yournick + " Service " + __VA_ARGS__ + "\r\n")
#define RPL_TRACENEWTYPE(yournick, newtype, clientname) (std::string(":server 208 ") + yournick + " " + newtype + " 0 " + clientname + "\r\n")
#define RPL_TRACECLASS(yournick, conn_class, count) (std::string(":server 209 ") + yournick + " Class " + conn_class + " " + count + "\r\n")
#define RPL_TRACELOG(yournick, logfile, debuglevel) (std::string(":server 261 ") + yournick + " File " + logfile + " " + debuglevel + "\r\n")
#define RPL_TRACEEND(yournick, servername, version) (std::string(":server 262 ") + yournick + " " + servername + " " + version + " :End of TRACE\r\n")
#define RPL_STATSLINKINFO(yournick, ...) (std::string(":server 211 ") + yournick + " " + __VA_ARGS__ + "\r\n")
#define RPL_STATSCOMMANDS(yournick, command, count, bytecount, remotecount) (std::string(":server 212 ") + yournick + " " + command + " " + count + " " + bytecount + " " + remotecount + "\r\n")
#define RPL_ENDOFSTATS(yournick, statsletter) (std::string(":server 219 ") + yournick + " " + statsletter + " :End of STATS report\r\n")
#define RPL_UMODEIS(yournick, modestring) (std::string(":server 221 ") + yournick + " " + modestring + "\r\n")
#define RPL_SERVLIST(yournick, name, server, mask, type, hopcount, info) (std::string(":server 234 ") + yournick + " " + name + " " + server + " " + mask + " " + type + " " + hopcount + " " + info + "\r\n")
#define RPL_SERVLISTEND(yournick, mask, type) (std::string(":server 235 ") + yournick + " " + mask + " " + type + " :End of service listing\r\n")
#define RPL_STATSUPTIME(yournick) (std::string(":server 242 ") + yournick + " :Server Up %d days %d:%02d:%02d\r\n")
#define RPL_STATSOLINE(yournick, hostmask, name) (std::string(":server 243 ") + yournick + " O " + hostmask + " * " + name + "\r\n")
#define RPL_LUSERCLIENT(yournick, users, services, servers) (std::string(":server 251 ") + yournick + " :There are " + users + " users and " + services + " services on " + servers + " servers\r\n")
#define RPL_LUSEROP(yournick, num) (std::string(":server 252 ") + yournick + " " + num + " :operator(s) online\r\n")
#define RPL_LUSERUNKNOWN(yournick, num) (std::string(":server 253 ") + yournick + " " + num + " :unknown connection(s)\r\n")
#define RPL_LUSERCHANNELS(yournick, num) (std::string(":server 254 ") + yournick + " " + num + " :channels formed\r\n")
#define RPL_LUSERME(yournick, clients, servers) (std::string(":server 255 ") + yournick + " :I have " + clients + " clients and " + servers + " servers\r\n")
#define RPL_ADMINME(yournick, server) (std::string(":server 256 ") + yournick + " " + server + " :Administrative info\r\n")
#define RPL_ADMINLOC1(yournick, info) (std::string(":server 257 ") + yournick + " :" + info + "\r\n")
#define RPL_ADMINLOC2(yournick, info) (std::string(":server 258 ") + yournick + " :" + info + "\r\n")
#define RPL_ADMINEMAIL(yournick, info) (std::string(":server 259 ") + yournick + " :" + info + "\r\n")
#define RPL_TRYAGAIN(yournick, command) (std::string(":server 263 ") + yournick + " " + command + " :Please wait a while and try again.\r\n")
#define RPL_AWAY(yournick, nick, message) (std::string(":server 301 ") + yournick + " " + nick + " :" + message + "\r\n")
#define RPL_USERHOST(yournick, replies) (std::string(":server 302 ") + yournick + " :" + replies + "\r\n")
#define RPL_ISON(yournick, nicks) (std::string(":server 303 ") + yournick + " :" + nicks + "\r\n")
#define RPL_UNAWAY(yournick) (std::string(":server 305 ") + yournick + " :You are no longer marked as being away\r\n")
#define RPL_NOWAWAY(yournick) (std::string(":server 306 ") + yournick + " :You have been marked as being away\r\n")
#define RPL_WHOISUSER(yournick, nick, user, host, realname) (std::string(":server 311 ") + yournick + " " + nick + " " + user + " " + host + " * :" + realname + "\r\n")
#define RPL_WHOISSERVER(yournick, nick, server, serverinfo) (std::string(":server 312 ") + yournick + " " + nick + " " + server + " :" + serverinfo + "\r\n")
#define RPL_WHOISOPERATOR(yournick, nick) (std::string(":server 313 ") + yournick + " " + nick + " :is an IRC operator\r\n")
#define RPL_WHOWASUSER(yournick, nick, user, host, realname) (std::string(":server 314 ") + yournick + " " + nick + " " + user + " " + host + " * :" + realname + "\r\n")
#define RPL_ENDOFWHO(yournick, name) (std::string(":server 315 ") + yournick + " " + name + " :End of WHO list\r\n")
#define RPL_WHOISIDLE(yournick, nick, seconds) (std::string(":server 317 ") + yournick + " " + nick + " " + seconds + " :seconds idle\r\n")
#define RPL_ENDOFWHOIS(yournick, nick) (std::string(":server 318 ") + yournick + " " + nick + " :End of WHOIS list\r\n")
#define RPL_WHOISCHANNELS(yournick, nick, channellist) (std::string(":server 319 ") + yournick + " " + nick + " :" + channellist + "\r\n")
#define RPL_LIST(yournick, channel, visible, topic) (std::string(":server 322 ") + yournick + " " + channel + " " + std::to_string(visible) + " :" + topic + "\r\n")
#define RPL_LISTEND(yournick) (std::string(":server 323 ") + yournick + " :End of LIST\r\n")
#define RPL_CHANNELMODEIS(yournick, channel, mode, modeparams) (std::string(":server 324 ") + yournick + " " + channel + " " + mode + " " + modeparams + "\r\n")
#define RPL_UNIQOPIS(yournick, channel, nickname) (std::string(":server 325 ") + yournick + " " + channel + " " + nickname + "\r\n")
#define RPL_NOTOPIC(yournick, channel) (std::string(":server 331 ") + yournick + " " + channel + " :No topic is set\r\n")
#define RPL_TOPIC(yournick, channel, topic) (std::string(":server 332 ") + yournick + " " + channel + " :" + topic + "\r\n")
#define RPL_INVITING(yournick, channel, nick) (std::string(":server 341 ") + yournick + " " + channel + " " + nick + "\r\n")
#define RPL_SUMMONING(yournick, user) (std::string(":server 342 ") + yournick + " " + user + " :Summoning user to IRC\r\n")
#define RPL_INVITELIST(yournick, channel, invitemask) (std::string(":server 346 ") + yournick + " " + channel + " " + invitemask + "\r\n")
#define RPL_ENDOFINVITELIST(yournick, channel) (std::string(":server 347 ") + yournick + " " + channel + " :End of channel invite list\r\n")
#define RPL_EXCEPTLIST(yournick, channel, exceptionmask) (std::string(":server 348 ") + yournick + " " + channel + " " + exceptionmask + "\r\n")
#define RPL_ENDOFEXCEPTLIST(yournick, channel) (std::string(":server 349 ") + yournick + " " + channel + " :End of channel exception list\r\n")
#define RPL_VERSION(yournick, version, debuglevel, server, comments) (std::string(":server 351 ") + yournick + " " + version + "." + debuglevel + " " + server + " :" + comments + "\r\n")
#define RPL_WHOREPLY(yournick, channel, user, host, server, nick, flags, hopcount, realname) (std::string(":server 352 ") + yournick + " " + channel + " " + user + " " + host + " " + server + " " + nick + " " + flags + " " + hopcount + " :" + realname + "\r\n")
#define RPL_NAMREPLY(yournick, symbol, channel, nicklist) (std::string(":server 353 ") + yournick + " " + symbol + " " + channel + " :" + nicklist + "\r\n")
#define RPL_ENDOFNAMES(yournick, channel) (std::string(":server 366 ") + yournick + " " + channel + " :End of NAMES list\r\n")
#define RPL_LINKS(yournick, mask, server, hopcount, serverinfo) (std::string(":server 364 ") + yournick + " " + mask + " " + server + " :" + hopcount + " " + serverinfo + "\r\n")
#define RPL_ENDOFLINKS(yournick, mask) (std::string(":server 365 ") + yournick + " " + mask + " :End of LINKS list\r\n")
#define RPL_BANLIST(yournick, channel, banmask) (std::string(":server 367 ") + yournick + " " + channel + " " + banmask + "\r\n")
#define RPL_ENDOFBANLIST(yournick, channel) (std::string(":server 368 ") + yournick + " " + channel + " :End of channel ban list\r\n")
#define RPL_ENDOFWHOWAS(yournick, nick) (std::string(":server 369 ") + yournick + " " + nick + " :End of WHOWAS\r\n")
#define RPL_INFO(yournick, info) (std::string(":server 371 ") + yournick + " :" + info + "\r\n")
#define RPL_MOTD(yournick, text) (std::string(":server 372 ") + yournick + " :- " + text + "\r\n")
#define RPL_ENDOFINFO(yournick) (std::string(":server 374 ") + yournick + " :End of INFO list\r\n")
#define RPL_MOTDSTART(yournick, server) (std::string(":server 375 ") + yournick + " :- " + server + " Message of the day -\r\n")
#define RPL_ENDOFMOTD(yournick) (std::string(":server 376 ") + yournick + " :End of MOTD command\r\n")
#define RPL_YOUREOPER(yournick) (std::string(":server 381 ") + yournick + " :You are now an IRC operator\r\n")
#define RPL_REHASHING(yournick, conffile) (std::string(":server 382 ") + yournick + " " + conffile + " :Rehashing\r\n")
#define RPL_YOURESERVICE(yournick, servicename) (std::string(":server 383 ") + yournick + " :You are service " + servicename + "\r\n")
#define RPL_TIME(yournick, server, time) (std::string(":server 391 ") + yournick + " " + server + " :" + time + "\r\n")
#define RPL_USERSSTART(yournick) (std::string(":server 392 ") + yournick + " :UserID   Terminal  Host\r\n")
#define RPL_USERS(yournick, username, ttyline, hostname) (std::string(":server 393 ") + yournick + " :" + username + " " + ttyline + " " + hostname + "\r\n")
#define RPL_ENDOFUSERS(yournick) (std::string(":server 394 ") + yournick + " :End of users\r\n")
#define RPL_NOUSERS(yournick) (std::string(":server 395 ") + yournick + " :Nobody logged in\r\n")

#define ERR_NOSUCHNICK(yournick, nickname) (std::string(":server 401 ") + yournick + " " + nickname + " :No such nick/channel\r\n")
#define ERR_NOSUCHSERVER(yournick, servername) (std::string(":server 402 ") + yournick + " " + servername + " :No such server\r\n")
#define ERR_NOSUCHCHANNEL(yournick, channelname) (std::string(":server 403 ") + yournick + " " + channelname + " :No such channel\r\n")
#define ERR_CANNOTSENDTOCHAN(yournick, channelname) (std::string(":server 404 ") + yournick + " " + channelname + " :Cannot send to channel\r\n")
#define ERR_TOOMANYCHANNELS(yournick, channelname) (std::string(":server 405 ") + yournick + " " + channelname + " :You have joined too many channels\r\n")
#define ERR_WASNOSUCHNICK(yournick, nickname) (std::string(":server 406 ") + yournick + " " + nickname + " :There was no such nickname\r\n")
#define ERR_TOOMANYTARGETS(yournick, target, errcode, abortmsg) (std::string(":server 407 ") + yournick + " " + target + " :" + errcode + " recipients. " + abortmsg + "\r\n")
#define ERR_NOSUCHSERVICE(yournick, servicename) (std::string(":server 408 ") + yournick + " " + servicename + " :No such service\r\n")
#define ERR_NOORIGIN(yournick) (std::string(":server 409 ") + yournick + " :No origin specified\r\n")
#define ERR_NORECIPIENT(yournick, command) (std::string(":server 411 ") + yournick + " :No recipient given (" + command + ")\r\n")
#define ERR_NOTEXTTOSEND(yournick) (std::string(":server 412 ") + yournick + " :No text to send\r\n")
#define ERR_NOTOPLEVEL(yournick, mask) (std::string(":server 413 ") + yournick + " " + mask + " :No toplevel domain specified\r\n")
#define ERR_WILDTOPLEVEL(yournick, mask) (std::string(":server 414 ") + yournick + " " + mask + " :Wildcard in toplevel domain\r\n")
#define ERR_BADMASK(yournick, mask) (std::string(":server 415 ") + yournick + " " + mask + " :Bad Server/host mask\r\n")
#define ERR_UNKNOWNCOMMAND(yournick, command) (std::string(":server 421 ") + yournick + " " + command + " :Unknown command\r\n")
#define ERR_NOMOTD(yournick) (std::string(":server 422 ") + yournick + " :MOTD File is missing\r\n")
#define ERR_NOADMININFO(yournick, server) (std::string(":server 423 ") + yournick + " " + server + " :No administrative info available\r\n")
#define ERR_FILEERROR(yournick, fileop, file) (std::string(":server 424 ") + yournick + " :File error doing " + fileop + " on " + file + "\r\n")
#define ERR_NONICKNAMEGIVEN(yournick) (std::string(":server 431 ") + yournick + " :No nickname given\r\n")
#define ERR_ERRONEUSNICKNAME(yournick, nick) (std::string(":server 432 ") + yournick + " " + nick + " :Erroneous nickname\r\n")
#define ERR_NICKNAMEINUSE(yournick, nick) (std::string(":server 433 ") + yournick + " " + nick + " :Nickname is already in use\r\n")
#define ERR_NICKCOLLISION(yournick, nick, user, host) (std::string(":server 436 ") + yournick + " " + nick + " :Nickname collision KILL from " + user + "@" + host + "\r\n")
#define ERR_UNAVAILRESOURCE(yournick, resource) (std::string(":server 437 ") + yournick + " " + resource + " :Nick/channel is temporarily unavailable\r\n")
#define ERR_USERNOTINCHANNEL(yournick, nick, channel) (std::string(":server 441 ") + yournick + " " + nick + " " + channel + " :They aren't on that channel\r\n")
#define ERR_NOTONCHANNEL(yournick, channel) (std::string(":server 442 ") + yournick + " " + channel + " :You're not on that channel\r\n")
#define ERR_USERONCHANNEL(yournick, user, channel) (std::string(":server 443 ") + yournick + " " + user + " " + channel + " :is already on channel\r\n")
#define ERR_NOLOGIN(yournick, user) (std::string(":server 444 ") + yournick + " " + user + " :User not logged in\r\n")
#define ERR_SUMMONDISABLED(yournick) (std::string(":server 445 ") + yournick + " :SUMMON has been disabled\r\n")
#define ERR_USERSDISABLED(yournick) (std::string(":server 446 ") + yournick + " :USERS has been disabled\r\n")
#define ERR_NOTREGISTERED(yournick) (std::string(":server 451 ") + yournick + " :You have not registered\r\n")
#define ERR_NEEDMOREPARAMS(yournick, command) (std::string(":server 461 ") + yournick + " " + command + " :Not enough parameters\r\n")
#define ERR_ALREADYREGISTRED(yournick) (std::string(":server 462 ") + yournick + " :Unauthorized command (already registered)\r\n")
#define ERR_NOPERMFORHOST(yournick) (std::string(":server 463 ") + yournick + " :Your host isn't among the privileged\r\n")
#define ERR_PASSWDMISMATCH(yournick) (std::string(":server 464 ") + yournick + " :Password incorrect\r\n")
#define ERR_YOUREBANNEDCREEP(yournick) (std::string(":server 465 ") + yournick + " :You are banned from this server\r\n")
#define ERR_YOUWILLBEBANNED(yournick) (std::string(":server 466 ") + yournick + " :You will be banned\r\n")
#define ERR_KEYSET(yournick, channel) (std::string(":server 467 ") + yournick + " " + channel + " :Channel key already set\r\n")
#define ERR_CHANNELISFULL(yournick, channel) (std::string(":server 471 ") + yournick + " " + channel + " :Cannot join channel (+l)\r\n")
#define ERR_UNKNOWNMODE(yournick, character, channel) (std::string(":server 472 ") + yournick + " " + character + " :is unknown mode char to me for " + channel + "\r\n")
#define ERR_INVITEONLYCHAN(yournick, channel) (std::string(":server 473 ") + yournick + " " + channel + " :Cannot join channel (+i)\r\n")
#define ERR_BANNEDFROMCHAN(yournick, channel) (std::string(":server 474 ") + yournick + " " + channel + " :Cannot join channel (+b)\r\n")
#define ERR_BADCHANNELKEY(yournick, channel) (std::string(":server 475 ") + yournick + " " + channel + " :Cannot join channel (+k)\r\n")
#define ERR_BADCHANMASK(yournick, channel) (std::string(":server 476 ") + yournick + " " + channel + " :Bad Channel Mask\r\n")
#define ERR_NOCHANMODES(yournick, channel) (std::string(":server 477 ") + yournick + " " + channel + " :Channel doesn't support modes\r\n")
#define ERR_BANLISTFULL(yournick, channel, character) (std::string(":server 478 ") + yournick + " " + channel + " " + character + " :Channel list is full\r\n")
#define ERR_NOPRIVILEGES(yournick) (std::string(":server 481 ") + yournick + " :Permission Denied- You're not an IRC operator\r\n")
#define ERR_CHANOPRIVSNEEDED(yournick, channel) (std::string(":server 482 ") + yournick + " " + channel + " :You're not channel operator\r\n")
#define ERR_CANTKILLSERVER(yournick) (std::string(":server 483 ") + yournick + " :You can't kill a server!\r\n")
#define ERR_RESTRICTED(yournick) (std::string(":server 484 ") + yournick + " :Your connection is restricted!\r\n")
#define ERR_UNIQOPPRIVSNEEDED(yournick) (std::string(":server 485 ") + yournick + " :You're not the original channel operator\r\n")
#define ERR_NOOPERHOST(yournick) (std::string(":server 491 ") + yournick + " :No O-lines for your host\r\n")
#define ERR_UMODEUNKNOWNFLAG(yournick) (std::string(":server 501 ") + yournick + " :Unknown MODE flag\r\n")
#define ERR_USERSDONTMATCH(yournick) (std::string(":server 502 ") + yournick + " :Cannot change mode for other users\r\n")

#define RPL_PRIV_MESSAGE(yournick, recipient, message)  (std::string(":" + yournick) + " PRIVMSG " + recipient + " :" + std::string(message) + "\r\n")
#define RPL_CHANNEL_MESSAGE(yournick, channel, message)  (std::string(":" + yournick) + " PRIVMSG " + channel + " :" + std::string(message) + "\r\n")
#define RPL_PART(nick, username, host, channel, message) (":" + nick + "!" + username + "@" + host + " PART " + channel + (message.empty() ? "" : " :" + message) + "\r\n")
#define RPL_JOIN(nick, username, host, channel) (":" + nick + "!" + username + "@" + host + " JOIN " + channel + "\r\n")
#define RPL_CHANGE_MODE(nick, username, host, mode) (":" + nick + "!" + username + "@" + host + " " + mode + "\r\n")
#define RPL_QUIT(prefix, message) (":" + prefix + " QUIT :" + message + "\r\n")
#define RPL_ERROR_CLOSING_LINK(prefix, message) ("ERROR :Closing Link: " + prefix + " (" + message + ")\r\n")

#endif
